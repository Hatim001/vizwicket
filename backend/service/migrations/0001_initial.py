# Generated by Django 4.2.11 on 2024-03-23 20:23

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('team', models.CharField(max_length=100)),
                ('player_type', models.CharField(max_length=100)),
                ('value_in_cr', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('full_name', models.CharField(max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('national_side', models.CharField(max_length=100)),
                ('batting_style', models.CharField(max_length=100)),
                ('bowling_style', models.CharField(max_length=100)),
                ('sport', models.CharField(max_length=50)),
                ('matches_played', models.IntegerField()),
                ('innings_batted', models.IntegerField()),
                ('not_outs', models.IntegerField()),
                ('runs_scored', models.IntegerField()),
                ('highest_inn_score', models.CharField(max_length=50)),
                ('centuries', models.IntegerField()),
                ('fifties', models.IntegerField()),
                ('fours', models.IntegerField()),
                ('sixes', models.IntegerField()),
                ('batting_avg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('batting_strike_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('catches_taken', models.IntegerField()),
                ('stumpings_made', models.IntegerField()),
                ('ducks', models.IntegerField()),
                ('run_outs', models.IntegerField()),
                ('innings_bowled', models.IntegerField(blank=True, null=True)),
                ('overs_bowled', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('maidens_bowled', models.IntegerField(blank=True, null=True)),
                ('runs_conceded', models.IntegerField(blank=True, null=True)),
                ('wickets_taken', models.IntegerField(blank=True, null=True)),
                ('best_bowling', models.CharField(blank=True, max_length=50, null=True)),
                ('three_wickets', models.IntegerField(blank=True, null=True)),
                ('five_wickets', models.IntegerField(blank=True, null=True)),
                ('bowling_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('economy_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bowling_strike_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'Player',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=100, null=True)),
                ('date', models.DateField()),
                ('season', models.CharField(max_length=10)),
                ('match_number', models.CharField(max_length=25)),
                ('team1', models.CharField(max_length=100)),
                ('team2', models.CharField(max_length=100)),
                ('venue', models.CharField(max_length=150)),
                ('toss_winner', models.CharField(max_length=100)),
                ('toss_decision', models.CharField(max_length=50)),
                ('super_over', models.CharField(max_length=10, null=True)),
                ('winning_team', models.CharField(max_length=100, null=True)),
                ('won_by', models.CharField(max_length=50)),
                ('margin', models.IntegerField(null=True)),
                ('method', models.CharField(max_length=100, null=True)),
                ('player_of_match', models.CharField(max_length=100, null=True)),
                ('umpire1', models.CharField(max_length=100)),
                ('umpire2', models.CharField(max_length=100)),
                ('team1_players', models.ManyToManyField(related_name='matches_as_team1', to='service.player')),
                ('team2_players', models.ManyToManyField(related_name='matches_as_team2', to='service.player')),
            ],
            options={
                'db_table': 'Match',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innings', models.IntegerField()),
                ('over', models.IntegerField()),
                ('ball', models.IntegerField()),
                ('batter', models.CharField(max_length=100)),
                ('bowler', models.CharField(max_length=100)),
                ('non_striker', models.CharField(max_length=100)),
                ('extra_type', models.CharField(max_length=50, null=True)),
                ('batsman_run', models.IntegerField()),
                ('extra_run', models.IntegerField()),
                ('total_run', models.IntegerField()),
                ('non_boundary', models.BooleanField()),
                ('is_wicket', models.BooleanField()),
                ('dismissal_kind', models.CharField(max_length=50, null=True)),
                ('player_dismissed', models.CharField(max_length=100, null=True)),
                ('fielder', models.CharField(max_length=100, null=True)),
                ('batting_team', models.CharField(max_length=100)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.match')),
            ],
            options={
                'db_table': 'Delivery',
            },
        ),
    ]
